// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace macro_utils_h_generator
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class macro_utils : macro_utilsBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

/*THIS FILE IS GENERATED*/
/*DO NOT EDIT BY HAND!!!*/
/*instead edit macro_utils.tt here: http://www.github.com/azure/azure-macro-utils-c.git */
/*and then propagate the generated file to all the repos*/
/* !!! CAUTION!!! This file is copied to multiple places */
/* in https://github.com/Azure/azure-c-shared-utility.git, */
/* and all of these copies must be located and replaced. */


");
            
            #line 19 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
/*CHANGE BELOW 2 VARIABLES TO GET MORE / LESS */ 
            
            #line default
            #line hidden
            
            #line 20 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
int nArithmetic=1024;
            
            #line default
            #line hidden
            
            #line 21 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
int nMacroParameters=124;/*127 parameters in one macro definition in C99 in chapter 5.2.4.1 Translation limits*/
            
            #line default
            #line hidden
            this.Write(@"
#ifndef MACRO_UTILS_H
#define MACRO_UTILS_H

#ifdef __cplusplus
#include <cstring>
#include <cstddef>
#else
#include <string.h>
#include <stddef.h>
#endif

#if (defined OPTIMIZE_RETURN_CODES)
    #define MU_FAILURE 1
#else
    #define MU_FAILURE __LINE__
#endif

/*""pointer or NULL"" macro - because when printf-ing arguments NULL is not valid for %s (section 7.1.4 of C11 standard) */
#define MU_P_OR_NULL(p) (((p)!=NULL)?(p):""NULL"")
#define MU_WP_OR_NULL(p) (((p)!=NULL)?(p):L""NULL"")

#define MU_TOSTRING_(x) #x
#define MU_TOSTRING(x) MU_TOSTRING_(x)

#define MU_IFCOMMA(N) MU_C2(MU_IFCOMMA_, N)
#define MU_IFCOMMA_0
#define MU_IFCOMMA_2
");
            
            #line 50 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=4;i<=nMacroParameters;i+=2)
            
            #line default
            #line hidden
            
            #line 51 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_IFCOMMA_");
            
            #line 52 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ,\r\n");
            
            #line 53 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_IFCOMMALOGIC(N) MU_C2(MU_IFCOMMALOGIC_, N)\r\n#define MU_IFCOMMALOGIC_" +
                    "0 \r\n");
            
            #line 57 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=1;i<=nMacroParameters;i+=1)
            
            #line default
            #line hidden
            
            #line 58 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_IFCOMMALOGIC_");
            
            #line 59 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ,\r\n");
            
            #line 60 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_IFCOMMA_NOFIRST(N) MU_C2(MU_IFCOMMA_NOFIRST, N)\r\n#define MU_IFCOMMA_" +
                    "NOFIRST1 \r\n");
            
            #line 64 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=2;i<=nMacroParameters;i++)
            
            #line default
            #line hidden
            
            #line 65 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_IFCOMMA_NOFIRST");
            
            #line 66 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ,\r\n");
            
            #line 67 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_DEC(x) MU_C2(MU_DEC,x)\r\n");
            
            #line 70 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nArithmetic;i>=1;i--)
            
            #line default
            #line hidden
            
            #line 71 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_DEC");
            
            #line 72 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 72 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 73 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_INC(x) MU_C2(MU_INC,x)\r\n");
            
            #line 76 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nArithmetic;i>=0;i--)
            
            #line default
            #line hidden
            
            #line 77 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_INC");
            
            #line 78 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 78 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 79 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_DIV2(x) MU_C2(MU_DIV2_,x)\r\n\r\n");
            
            #line 83 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nArithmetic;i>=0;i--)
            
            #line default
            #line hidden
            
            #line 84 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_DIV2_");
            
            #line 85 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 85 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i/2));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 86 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 88 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
/*the below produces MOD2 for numbers*/
            
            #line default
            #line hidden
            this.Write("#define MU_MOD2(x) MU_C2(MU_MOD2_,x)\r\n");
            
            #line 90 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nArithmetic;i>=0;i--)
            
            #line default
            #line hidden
            
            #line 91 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_MOD2_");
            
            #line 92 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 92 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i%2));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 93 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_THE_NTH_ARG(");
            
            #line 95 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=1;i<=nMacroParameters;i++)
            
            #line default
            #line hidden
            
            #line 96 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 96 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 96 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(" ... ) P");
            
            #line 96 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nMacroParameters));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n#define MU_TRIGGER_PARENTHESIS(...) ,\r\n\r\n#define MU_LPAREN (\r\n\r\n#ifdef _MSC_V" +
                    "ER\r\n#define MU_COUNT_1_OR_MORE_ARG(...) MU_THE_NTH_ARG MU_LPAREN __VA_ARGS__, \\\r" +
                    "\n");
            
            #line 104 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters-1;i>=1;i--){
            
            #line default
            #line hidden
            
            #line 104 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i.ToString()+((i>1)?", ":"")));
            
            #line default
            #line hidden
            
            #line 104 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n#define MU_MORE_THAN_1_ARG(...) MU_THE_NTH_ARG MU_LPAREN __VA_ARGS__, ");
            
            #line 105 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters-2;i>=1;i--){
            
            #line default
            #line hidden
            
            #line 105 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(1));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 105 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("0)\r\n#else\r\n#define MU_COUNT_1_OR_MORE_ARG(...) MU_THE_NTH_ARG (__VA_ARGS__, \\\r\n");
            
            #line 108 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters-1;i>=1;i--){
            
            #line default
            #line hidden
            
            #line 108 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i.ToString()+((i>1)?", ":"")));
            
            #line default
            #line hidden
            
            #line 108 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n#define MU_MORE_THAN_1_ARG(...) MU_THE_NTH_ARG(__VA_ARGS__, ");
            
            #line 109 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters-2;i>=1;i--){
            
            #line default
            #line hidden
            
            #line 109 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(1));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 109 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(@" 0)
#endif

#define MU_COUNT_ARG(...) MU_C2(MU_COUNT_ARG_, MU_ISEMPTY(__VA_ARGS__))(__VA_ARGS__)
#define MU_COUNT_ARG_1(...) 0
#define MU_COUNT_ARG_0(...) MU_C1(MU_COUNT_1_OR_MORE_ARG(__VA_ARGS__))

#define MU_ISEMPTY(...) MU_C5(MU_DISPTACH_EMPTY_, MU_MORE_THAN_1_ARG(MU_TRIGGER_PARENTHESIS __VA_ARGS__ ()), MU_MORE_THAN_1_ARG(__VA_ARGS__), MU_MORE_THAN_1_ARG(__VA_ARGS__ ()), MU_MORE_THAN_1_ARG(MU_TRIGGER_PARENTHESIS __VA_ARGS__))
#define MU_DISPTACH_EMPTY_1000 1
#define MU_DISPTACH_EMPTY_0000 0
#define MU_DISPTACH_EMPTY_1100 0
#define MU_DISPTACH_EMPTY_1111 0
#define MU_DISPTACH_EMPTY_1001 0
#define MU_DISPTACH_EMPTY_1010 0


#define MU_C2_(x,y) x##y

#define MU_C2(x,y) MU_C2_(x,y)

#define MU_C3(x,y,z) MU_C2(x, MU_C2(y,z))

#define MU_C4(x,y,z, u) MU_C2(MU_C2(x,y), MU_C2(z,u))

#define MU_C5(x,y,z,u, v) MU_C2(MU_C4(x,y, z, u), v)

#define MU_C1_(x) x

#define MU_C1(x) MU_C1_(x)

#define MU_C2STRING(x,y) x y

#define MU_C3STRING(x,y,z) x y z

#define MU_C4STRING(x,y,z,u) x y z u

#define MU_C5STRING(x,y,z,u,v) x y z u v


");
            
            #line 148 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters;i>=2;i--)
            
            #line default
            #line hidden
            
            #line 149 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_1_");
            
            #line 150 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 150 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 150 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 150 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(P1) \\\r\nMU_FOR_EACH_1_");
            
            #line 152 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 152 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=2;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 152 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 152 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n");
            
            #line 154 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(@"#define MU_FOR_EACH_1_1(X, P1) \
X(P1)

#ifdef _MSC_VER
#define MU_FOR_EACH_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_1_,MU_C1(MU_COUNT_ARG(__VA_ARGS__))) MU_LPAREN MACRO_TO_INVOKE, __VA_ARGS__)
#else
#define MU_FOR_EACH_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_1_,MU_C1(MU_COUNT_ARG(__VA_ARGS__))) ( MACRO_TO_INVOKE, __VA_ARGS__)
#endif

");
            
            #line 164 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters;i>=2;i--)
            
            #line default
            #line hidden
            
            #line 165 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_1_KEEP_1_");
            
            #line 166 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, keep, ");
            
            #line 166 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 166 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 166 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(keep, P1) \\\r\nMU_FOR_EACH_1_KEEP_1_");
            
            #line 168 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write("(X, keep, ");
            
            #line 168 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=2;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 168 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((j).ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 168 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n\r\n");
            
            #line 171 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(@"
#define MU_FOR_EACH_1_KEEP_1_1(X, keep, P1) \
X(keep, P1)

#ifdef _MSC_VER
#define MU_FOR_EACH_1_KEEP_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_1_KEEP_1_, MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__)))) MU_LPAREN MACRO_TO_INVOKE, __VA_ARGS__)
#else
#define MU_FOR_EACH_1_KEEP_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_1_KEEP_1_, MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__)))) ( MACRO_TO_INVOKE, __VA_ARGS__)
#endif

");
            
            #line 182 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters;i>=4;i-=2)
            
            #line default
            #line hidden
            
            #line 183 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_2_KEEP_1_");
            
            #line 184 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, keep, ");
            
            #line 184 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 184 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 184 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(keep, P1, P2) \\\r\nMU_FOR_EACH_2_KEEP_1_");
            
            #line 186 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-2));
            
            #line default
            #line hidden
            this.Write("(X, keep, ");
            
            #line 186 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=3;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 186 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((j).ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 186 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n\r\n");
            
            #line 189 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(@"
#define MU_FOR_EACH_2_KEEP_1_1(...)

#define MU_FOR_EACH_2_KEEP_1_0(...)

#define MU_FOR_EACH_2_KEEP_1_2(X, keep, P1, P2) \
    X(keep, P1, P2) \

#ifdef _MSC_VER
#define MU_FOR_EACH_2_KEEP_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_KEEP_1_, MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__)))) MU_LPAREN MACRO_TO_INVOKE, __VA_ARGS__)
#else
#define MU_FOR_EACH_2_KEEP_1(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_KEEP_1_, MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__)))) ( MACRO_TO_INVOKE, __VA_ARGS__)
#endif


");
            
            #line 205 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=nMacroParameters;i>=4;i-=2)
            
            #line default
            #line hidden
            
            #line 206 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
{
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_2_KEEP_2_");
            
            #line 207 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, keep1, keep2, ");
            
            #line 207 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 207 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 207 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(keep1, keep2, P1, P2) \\\r\nMU_FOR_EACH_2_KEEP_2_");
            
            #line 209 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-2));
            
            #line default
            #line hidden
            this.Write("(X, keep1, keep2, ");
            
            #line 209 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=3;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 209 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((j).ToString()+(j<i?", ":"")));
            
            #line default
            #line hidden
            
            #line 209 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n\r\n");
            
            #line 212 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(@"
#define MU_FOR_EACH_2_KEEP_2_1(...)

#define MU_FOR_EACH_2_KEEP_2_0(...)

#define MU_FOR_EACH_2_KEEP_2_2(X, keep1, keep2, P1, P2) \
    X(keep1, keep2, P1, P2) \

#ifdef _MSC_VER
#define MU_FOR_EACH_2_KEEP_2(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_KEEP_2_, MU_C2(MU_DEC,MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__))))) MU_LPAREN MACRO_TO_INVOKE, __VA_ARGS__)
#else
#define MU_FOR_EACH_2_KEEP_2(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_KEEP_2_, MU_C2(MU_DEC, MU_C2(MU_DEC,MU_C1(MU_COUNT_ARG(__VA_ARGS__))))) ( MACRO_TO_INVOKE, __VA_ARGS__)
#endif


#define MU_FOR_EACH_2_0(...)

#define MU_FOR_EACH_2_2(X, P1, P2) \
X(P1, P2)

");
            
            #line 233 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=4;i<=nMacroParameters;i+=2) {
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_2_");
            
            #line 234 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 234 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 234 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 234 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(P1, P2) \\\r\nMU_FOR_EACH_2_");
            
            #line 236 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-2));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 236 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=3;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 236 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 236 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n");
            
            #line 238 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_FOR_EACH_2_REVERSE_0(...)\r\n\r\n#define MU_FOR_EACH_2_REVERSE_2(X, P1, " +
                    "P2) \\\r\nX(P1, P2)\r\n\r\n");
            
            #line 245 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=4;i<=nMacroParameters;i+=2) {
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_2_REVERSE_");
            
            #line 246 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 246 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 246 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 246 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(P");
            
            #line 247 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write(", P");
            
            #line 247 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(") \\\r\nMU_FOR_EACH_2_REVERSE_");
            
            #line 248 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-2));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 248 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i-2;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 248 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i-2)?", ":"")));
            
            #line default
            #line hidden
            
            #line 248 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n");
            
            #line 250 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_FOR_EACH_1_COUNTED_0(...)\r\n\r\n#define MU_FOR_EACH_1_COUNTED_1(X, P1) " +
                    "\\\r\n    X(1, P1)\r\n\r\n");
            
            #line 257 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=2;i<=nMacroParameters;i++) {
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_1_COUNTED_");
            
            #line 258 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 258 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 258 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 258 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(");
            
            #line 259 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(", P1) \\\r\nMU_FOR_EACH_1_COUNTED_");
            
            #line 260 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 260 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=2;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 260 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 260 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n");
            
            #line 262 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_FOR_EACH_2_COUNTED_0(...)\r\n\r\n#define MU_FOR_EACH_2_COUNTED_2(X, P1, " +
                    "P2) \\\r\n    X(2, P1, P2)\r\n\r\n");
            
            #line 269 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=4;i<=nMacroParameters;i+=2) {
            
            #line default
            #line hidden
            this.Write("#define MU_FOR_EACH_2_COUNTED_");
            
            #line 270 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 270 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=1;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 270 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 270 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(") \\\r\nX(");
            
            #line 271 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(", P1, P2) \\\r\nMU_FOR_EACH_2_COUNTED_");
            
            #line 272 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-2));
            
            #line default
            #line hidden
            this.Write("(X, ");
            
            #line 272 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var j=3;j<=i;j++){
            
            #line default
            #line hidden
            this.Write("P");
            
            #line 272 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(j.ToString()+((j<i)?", ":"")));
            
            #line default
            #line hidden
            
            #line 272 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n\r\n");
            
            #line 274 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#ifdef _MSC_VER\r\n#define MU_FOR_EACH_2(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_" +
                    "2_, MU_C1(MU_COUNT_ARG(__VA_ARGS__))) MU_LPAREN MACRO_TO_INVOKE, __VA_ARGS__)\r\n/" +
                    "*the COUNTED breed of MU_FOR_EACH macro invokes a macro with 3 parameters: 1st b" +
                    "eing the count of invocation. For example.\r\nMU_FOR_EACH_2_COUNTER(MACRO, a,b,c,d" +
                    ",e,f) will result in \r\nMACRO(6, a,b)\r\nMACRO(4, c,d)\r\nMACRO(2, e,f)\r\nThis macro e" +
                    "xists because we need a \"stop condition\" in outputting COMMA... when calling a f" +
                    "unction f(a,b,c,d) cannot be f(a,b,c,d,) <=doesn\'t compile (as opposed to enum d" +
                    "efinition)\r\n*/\r\n#define MU_FOR_EACH_2_COUNTED(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR" +
                    "_EACH_2_COUNTED_, MU_C1(MU_COUNT_ARG(__VA_ARGS__))) MU_LPAREN MACRO_TO_INVOKE, _" +
                    "_VA_ARGS__)\r\n#define MU_FOR_EACH_1_COUNTED(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EA" +
                    "CH_1_COUNTED_, MU_C1(MU_COUNT_ARG(__VA_ARGS__))) MU_LPAREN MACRO_TO_INVOKE, __VA" +
                    "_ARGS__)\r\n\r\n/*MU_FOR_EACH_2_REVERSE acts just like MU_FOR_EACH_2, but in reverse" +
                    " order. Example:\r\nMU_FOR_EACH_2_REVERSE(X,a,b,c,d,e,f) => X(e,f) X(c,d) X (a, b)" +
                    " in this order */\r\n#define MU_FOR_EACH_2_REVERSE(MACRO_TO_INVOKE, ...) MU_C2(MU_" +
                    "FOR_EACH_2_REVERSE_, MU_C1(MU_COUNT_ARG(__VA_ARGS__))) MU_LPAREN MACRO_TO_INVOKE" +
                    ", __VA_ARGS__)\r\n#else\r\n#define MU_FOR_EACH_2(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_" +
                    "EACH_2_, MU_C1(MU_COUNT_ARG(__VA_ARGS__))) ( MACRO_TO_INVOKE, __VA_ARGS__)\r\n#def" +
                    "ine MU_FOR_EACH_2_COUNTED(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_COUNTED_, MU" +
                    "_C1(MU_COUNT_ARG(__VA_ARGS__))) ( MACRO_TO_INVOKE,  __VA_ARGS__)\r\n#define MU_FOR" +
                    "_EACH_1_COUNTED(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_1_COUNTED_, MU_C1(MU_COU" +
                    "NT_ARG(__VA_ARGS__))) ( MACRO_TO_INVOKE,  __VA_ARGS__)\r\n#define MU_FOR_EACH_2_RE" +
                    "VERSE(MACRO_TO_INVOKE, ...) MU_C2(MU_FOR_EACH_2_REVERSE_, MU_C1(MU_COUNT_ARG(__V" +
                    "A_ARGS__))) ( MACRO_TO_INVOKE, __VA_ARGS__)\r\n#endif\r\n\r\n#ifdef _MSC_VER\r\n#define " +
                    "MU_EXPAND_OR_MU_C1(x) x\r\n#else\r\n#define MU_EXPAND_OR_MU_C1(...) __VA_ARGS__\r\n#en" +
                    "dif\r\n\r\n#define MU_EXPAND_ARGS(...) __VA_ARGS__\r\n#define MU_EXPAND_TWICE(...) MU_" +
                    "EXPAND_ARGS(__VA_ARGS__)\r\n\r\n#define MU_DO_0(MACRO, ...) \\\r\nMACRO(0, __VA_ARGS__)" +
                    "\r\n\r\n");
            
            #line 310 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
for(var i=1;i<=nArithmetic;i++){
            
            #line default
            #line hidden
            this.Write("#define MU_DO_");
            
            #line 311 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("(MACRO, ...) \\\r\nMACRO(");
            
            #line 312 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(", __VA_ARGS__) \\\r\nMU_DO_");
            
            #line 313 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i-1));
            
            #line default
            #line hidden
            this.Write("(MACRO, __VA_ARGS__)\r\n\r\n\r\n");
            
            #line 316 "G:\onebranch\Azure-MessagingStore\deps\umock-c\deps\azure-macro-utils-c\macro_utils_h_generator\macro_utils.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#define MU_DO(TIMES, MACRO, ...) MU_C2(MU_DO_, TIMES)(MACRO, __VA_ARGS__)\r\n\r\n\r\n" +
                    "/* we need some sort of macro that does:\r\nMU_IF(0, \"true\", \"false\") => \"false\"\r\n" +
                    "MU_IF(1, \"true\", \"false\") => \"true\"\r\nMU_IF(X, \"true\", \"false\") => \"true\"\r\n*/\r\n\r\n" +
                    "#define MU_INTERNALIF(x) MU_INTERNALIF##x\r\n#define MU_INTERNALIF0\r\n\r\n#define MU_" +
                    "ISZERO(x) MU_COUNT_ARG(MU_INTERNALIF(x))\r\n\r\n#define MU_IF(condition, trueBranch," +
                    " falseBranch) MU_C2(MU_IF,MU_ISZERO(condition))(trueBranch, falseBranch)\r\n#defin" +
                    "e MU_IF0(trueBranch, falseBranch) falseBranch\r\n#define MU_IF1(trueBranch, falseB" +
                    "ranch) trueBranch\r\n\r\n\r\n/*the following macro want to eat empty arguments from a " +
                    "list */\r\n/*examples:                                                   */\r\n/*MU_" +
                    "EAT_EMPTY_ARGS(, , X) expands to X                       */\r\n\r\n#define MU_EXPAND" +
                    "_TO_NOTHING(arg)\r\n#define MU_EAT_EMPTY_ARG(arg_count, arg) MU_IF(MU_ISEMPTY(arg)" +
                    ",,arg) MU_IF(MU_ISEMPTY(arg),MU_EXPAND_TO_NOTHING,MU_IFCOMMALOGIC)(MU_DEC(arg_co" +
                    "unt))\r\n#define MU_EAT_EMPTY_ARGS(...) MU_FOR_EACH_1_COUNTED(MU_EAT_EMPTY_ARG, __" +
                    "VA_ARGS__)\r\n\r\n#define MU_DEFINE_ENUMERATION_CONSTANT(x) x,\r\n/*MU_DEFINE_ENUM goe" +
                    "s to header*/\r\n#define MU_DEFINE_ENUM(enumName, ...) typedef enum MU_C2(enumName" +
                    ", _TAG) { MU_FOR_EACH_1(MU_DEFINE_ENUMERATION_CONSTANT, __VA_ARGS__)} enumName; " +
                    "\\\r\n    extern const char* MU_C2(enumName,Strings)(enumName value); \\\r\n    extern" +
                    " int MU_C2(enumName, _FromString)(const char* enumAsString, enumName* destinatio" +
                    "n);\r\n\r\n\r\n#define MU_DEFINE_ENUMERATION_CONSTANT_AS_WIDESTRING(x) MU_C2(L, MU_TOS" +
                    "TRING(x)) , \r\n#define MU_DEFINE_ENUMERATION_CONSTANT_AS_STRING(x) MU_TOSTRING(x)" +
                    " , \r\n/*MU_DEFINE_ENUM_STRINGS goes to .c*/\r\n#define MU_DEFINE_ENUM_STRINGS(enumN" +
                    "ame, ...) const char* MU_C2(enumName, StringStorage)[MU_COUNT_ARG(__VA_ARGS__)] " +
                    "= {MU_FOR_EACH_1(MU_DEFINE_ENUMERATION_CONSTANT_AS_STRING, __VA_ARGS__)}; \\\r\ncon" +
                    "st char* MU_C2(enumName,Strings)(enumName value)                   \\\r\n{         " +
                    "                                                         \\\r\n    if((int)value<0 " +
                    "|| (int)value>=MU_COUNT_ARG(__VA_ARGS__))         \\\r\n    {                      " +
                    "                                        \\\r\n        /*this is an error case*/    " +
                    "                              \\\r\n        return \"NULL\";                         " +
                    "                    \\\r\n    }                                                    " +
                    "          \\\r\n    else                                                           " +
                    "\\\r\n    {                                                              \\\r\n       " +
                    " return MU_C2(enumName, StringStorage)[value];                 \\\r\n    }         " +
                    "                                                     \\\r\n}                       " +
                    "                                           \\\r\nint MU_C2(enumName, _FromString)(c" +
                    "onst char* enumAsString, enumName* destination)  \\\r\n{                           " +
                    "                                                    \\\r\n    if(                  " +
                    "                                                       \\\r\n        (enumAsString=" +
                    "=NULL) || (destination==NULL)                             \\\r\n    )              " +
                    "                                                             \\\r\n    {           " +
                    "                                                                \\\r\n        retur" +
                    "n MU_FAILURE;                                                     \\\r\n    }      " +
                    "                                                                     \\\r\n    else" +
                    "                                                                        \\\r\n    {" +
                    "                                                                           \\\r\n  " +
                    "      size_t i;                                                               \\\r" +
                    "\n        for(i=0;i<MU_COUNT_ARG(__VA_ARGS__);i++)                               " +
                    "    \\\r\n        {                                                                " +
                    "       \\\r\n            if(strcmp(enumAsString, MU_C2(enumName, StringStorage)[i])" +
                    "==0)         \\\r\n            {                                                   " +
                    "                \\\r\n                *destination = (enumName)i;                  " +
                    "                   \\\r\n                return 0;                                 " +
                    "                      \\\r\n            }                                          " +
                    "                         \\\r\n        }                                           " +
                    "                            \\\r\n        return MU_FAILURE;                       " +
                    "                              \\\r\n    }                                          " +
                    "                                 \\\r\n}                                           " +
                    "                                    \\\r\n\r\n#define MU_DEFINE_LOCAL_ENUM(enumName, " +
                    "...) typedef enum MU_C2(enumName, _TAG) { MU_FOR_EACH_1(MU_DEFINE_ENUMERATION_CO" +
                    "NSTANT, __VA_ARGS__)} enumName; \\\r\nstatic const char* MU_C2(enumName, StringStor" +
                    "age)[MU_COUNT_ARG(__VA_ARGS__)] = {MU_FOR_EACH_1(MU_DEFINE_ENUMERATION_CONSTANT_" +
                    "AS_STRING, __VA_ARGS__)}; \\\r\nstatic const char* MU_C2(enumName,Strings)(enumName" +
                    " value)            \\\r\n{                                                         " +
                    "         \\\r\n    if((int)value<0 || (int)value>=MU_COUNT_ARG(__VA_ARGS__))       " +
                    "  \\\r\n    {                                                              \\\r\n     " +
                    "   /*this is an error case*/                                  \\\r\n        return " +
                    "\"NULL\";                                             \\\r\n    }                    " +
                    "                                          \\\r\n    else                           " +
                    "                                \\\r\n    {                                        " +
                    "                      \\\r\n        return MU_C2(enumName, StringStorage)[value];  " +
                    "               \\\r\n    }                                                         " +
                    "     \\\r\n}\r\n\r\n\r\n#define MU_ENUM_TO_STRING(enumName, enumValue) MU_C2(enumName, St" +
                    "rings)(enumValue)\r\n#define MU_STRING_TO_ENUM(stringValue, enumName, addressOfEnu" +
                    "mVariable) MU_C2(enumName, _FromString)(stringValue, addressOfEnumVariable)\r\n\r\n#" +
                    "define MU_DEFINE_MICROMOCK_ENUM_TO_STRING(type, ...) MICROMOCK_ENUM_TO_STRING(ty" +
                    "pe, MU_FOR_EACH_1(MU_DEFINE_ENUMERATION_CONSTANT_AS_WIDESTRING, __VA_ARGS__));\r\n" +
                    "\r\n#define MU_EMPTY()\r\n#define MACRO_UTILS_DELAY(id) id MU_EMPTY MU_LPAREN )\r\n\r\n#" +
                    "define MU_DEFINE_ENUMERATION_CONSTANT_2(enumerationConstant, constantExpression)" +
                    " enumerationConstant = constantExpression,\r\n\r\n#define MU_DECLARE_ENUM_STRINGS_2(" +
                    "enumIdentifier, ...) extern const char* MU_C2(enumIdentifier,_ToString)(enumIden" +
                    "tifier enumerationConstant);\r\n\r\n#define MU_DEFINE_ENUM_2(enumIdentifier, ... ) t" +
                    "ypedef enum MU_C2(enumIdentifier, _TAG) {MU_FOR_EACH_2(MU_DEFINE_ENUMERATION_CON" +
                    "STANT_2, __VA_ARGS__)} enumIdentifier; \\\r\n    MU_DECLARE_ENUM_STRINGS_2(enumIden" +
                    "tifier, __VA_ARGS__)\r\n\r\ntypedef struct ENUM_VALUE_AND_STRING_TAG\r\n{\r\n    int val" +
                    "ue;\r\n    const char* valueAsString;\r\n}ENUM_VALUE_AND_STRING;\r\n\r\n#define MU_DEFIN" +
                    "E_ENUM_VALUE_AND_STRING(enumerationConstant, constantExpression) {enumerationCon" +
                    "stant, MU_TOSTRING(enumerationConstant)},\r\n#define MU_DEFINE_ENUM_STRINGS_2(enum" +
                    "Identifier, ... ) static const ENUM_VALUE_AND_STRING MU_C2(enumIdentifier, _Valu" +
                    "esAndStrings)[MU_DIV2(MU_COUNT_ARG(__VA_ARGS__))] ={MU_FOR_EACH_2(MU_DEFINE_ENUM" +
                    "_VALUE_AND_STRING, __VA_ARGS__)}; \\\r\nconst char* MU_C2(enumIdentifier,_ToString)" +
                    "(enumIdentifier value)                                                          " +
                    "                                                                                " +
                    "             \\\r\n{                                                               " +
                    "                                                                                " +
                    "                                                                     \\\r\n    for(" +
                    "size_t i=0;i<sizeof(MU_C2(enumIdentifier, _ValuesAndStrings))/sizeof(MU_C2(enumI" +
                    "dentifier, _ValuesAndStrings)[0]);i++)                                          " +
                    "                                                   \\\r\n    {                     " +
                    "                                                                                " +
                    "                                                                                " +
                    "                           \\\r\n        if(MU_C2(enumIdentifier, _ValuesAndStrings" +
                    ")[i].value == (int)value)                                                       " +
                    "                                                                                " +
                    "      \\\r\n        {                                                              " +
                    "                                                                                " +
                    "                                                              \\\r\n            ret" +
                    "urn MU_C2(enumIdentifier, _ValuesAndStrings)[i].valueAsString;                  " +
                    "                                                                                " +
                    "                                         \\\r\n        }                           " +
                    "                                                                                " +
                    "                                                                                " +
                    "                 \\\r\n    }                                                       " +
                    "                                                                                " +
                    "                                                                         \\\r\n    " +
                    "return \"NULL\";                                                                  " +
                    "                                                                                " +
                    "                                                 \\\r\n}                           " +
                    "                                                                                " +
                    "                                                                                " +
                    "                         \\\r\n\r\n#define MU_ENUM_TO_STRING_2(enumIdentifier, value)" +
                    " MU_C2(enumIdentifier,_ToString)(value)\r\n\r\n#endif /*MACRO_UTILS_H*/\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class macro_utilsBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
